<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.board.spring_board.repository.UserMapper">
    <resultMap id="userMap" type="com.board.spring_board.entity.User">
        <id property="userId" column="user_id"/>
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="nickname" column="nickname" />
        <result property="enabled" column="enabled" />
        <result property="profileUrl" column="profile_url"/>
        <result property="oauth2Id" column="oauth2_id"/>
        <result property="provider" column="provider"/>
    </resultMap>

<!--    <insert id="saveUser" parameterType="com.board.spring_board.entity.User">-->
<!--        insert into-->
<!--            user_tb(user_id, email, password, name, nickname, enabled)-->
<!--        values(0, #{email}, #{password}, #{name}, #{nickname}, 0)-->
<!--    </insert>-->

    <insert id="saveUser" parameterType="com.board.spring_board.entity.User">
        insert into
            user_tb
        values(0,
            #{email},
            #{password},
            #{name},
            #{nickname},
            0,
<!--            <if test="profileUrl == null">default</if>-->
<!--            <if test="profileUrl != null">#{profileUrl}</if>,-->
        <choose>
            <when test='profileUrl == null or profileUrl.equals("")'>
                default,
            </when>
            <otherwise>
                #{profileUrl},
            </otherwise>
        </choose>
            #{oauth2Id},
            #{provider}
        )
    </insert>

    <select id="findUserByEmail" resultMap="userMap">
        select
            user_id,
            email,
            password,
            name,
            nickname,
            enabled,
            profile_url,
            oauth2_id,
            provider
        from
            user_tb
        where
            email = #{email}
    </select>

    <select id="checkSignupUnique" parameterType="string" resultType="Integer">
        select
            (select
                if(count(*) > 0, 1, 0)
            from
                user_tb
            where
                email = #{email}
        ) + (
            select
                if(count(*) > 0, 2, 0)
            from
                user_tb
            where
                nickname = #{nickname}
        ) as result
    </select>



<!--  test   -->
    <select id="test" parameterType="string" resultType="string">
        select
        case when (
        select
        count(*)
        from
        user_tb
        where
        email = #{email}
        ) as emailCount = 1,
        then "email"

        when (
        select
        count(*)
        from
        user_tb
        where
        nickname = #{nickname}
        ) as nicknameCount
        then "nickname"

        else null
        end as result
<!--    test    -->
    </select>

    <update id="updateEnabled" >
        update
            user_tb
        set
            enabled = 1
        where
            email = #{email}
    </update>

    <update id="updateProfileUrl" parameterType="com.board.spring_board.entity.User">
        update
            user_tb
        set
            profile_url = #{profileUrl}
        where
            user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="com.board.spring_board.entity.User">
        update
            user_tb
        set
            password = #{password}
        where
            email = #{email}
    </update>

    <select id="findUserByOauth2Id" resultMap="userMap">
        select
            user_id,
            email,
            password,
            name,
            nickname,
            enabled,
            profile_url,
            oauth2_id,
            provider
        from
            user_tb
        where
            oauth2_id = #{oauth2Id}
    </select>

</mapper>